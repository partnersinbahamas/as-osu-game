{"version":3,"sources":["main.js"],"names":["screens","document","querySelectorAll","startButton","querySelector","timeList","timeEl","board","time","countClick","startGame","classList","add","setTime","getCircle","setInterval","decreaseTime","finishGame","currentTime","value","innerHTML","style","opacity","circle","createElement","size","randomCircleSize","getBoundingClientRect","width","height","top","left","append","min","max","Math","floor","random","addEventListener","event","preventDefault","item","target","contains","dataset","remove"],"mappings":";AAAA,IAAMA,EAAUC,SAASC,iBAAiB,WACpCC,EAAcF,SAASG,cAAc,UACrCC,EAAWJ,SAASG,cAAc,cAClCE,EAASL,SAASG,cAAc,SAChCG,EAAQN,SAASG,cAAc,UAEjCI,EAAO,EAEPC,EAAa,EA6BjB,SAASC,IACLV,EAAQ,GAAGW,UAAUC,IAAI,MAEzBC,EAAQL,GACRM,IACAC,YAAYC,EAAc,KAG9B,SAASA,IACDR,GAAQ,IAARA,EACAS,QACG,CACCC,IAAAA,IAAgBV,EAChBU,EAAc,KACdA,EAAkBV,IAAAA,OAAAA,IAGtBK,EAAQK,IAKhB,SAASL,EAAQM,GACbb,EAAOc,UAAkBD,MAAAA,OAAAA,GAI7B,SAASF,IACLV,EAAMa,UAAgDX,oCAAAA,OAAAA,EAAtD,gBAEkBR,SAASG,cAAc,eAC/BiB,MAAMC,QAAU,EAG9B,SAASR,IACCS,IAAAA,EAAStB,SAASuB,cAAc,OACtCD,EAAOZ,UAAUC,IAAI,UAEjBa,IAAAA,EAAOC,EAAiB,GAAI,IAERnB,EAAAA,EAAMoB,wBAAvBC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,OAEdN,EAAOF,MAAMO,MAAWH,GAAAA,OAAAA,EAAxB,MACAF,EAAOF,MAAMQ,OAAYJ,GAAAA,OAAAA,EAAzB,MACAF,EAAOF,MAAMS,IAASJ,GAAAA,OAAAA,EAAiB,EAAGE,EAAQH,GAAlD,MACAF,EAAOF,MAAMU,KAAUL,GAAAA,OAAAA,EAAiB,EAAGG,EAASJ,GAApD,MAGAlB,EAAMyB,OAAOT,GAGjB,SAASG,EAAiBO,EAAKC,GACpBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GA/EpD9B,EAAYmC,iBAAiB,QAAS,SAACC,GACnCA,EAAMC,iBACNxC,EAAQ,GAAGW,UAAUC,IAAI,QAG7BP,EAASiC,iBAAiB,QAAS,SAACC,GAC1BE,IAAAA,EAAOF,EAAMG,OAEfD,EAAK9B,UAAUgC,SAAS,cACxBnC,GAAQiC,EAAKG,QAAQpC,KAErBE,OAKRH,EAAM+B,iBAAiB,QAAS,SAACC,GACvBE,IAAAA,EAAOF,EAAMG,OAEfD,EAAK9B,UAAUgC,SAAS,YACxBlC,IACAgC,EAAKI,SAEL/B","file":"main.0365e77b.js","sourceRoot":"../src","sourcesContent":["const screens = document.querySelectorAll('.screen');\nconst startButton = document.querySelector('.start');\nconst timeList = document.querySelector('.time-list');\nconst timeEl = document.querySelector('#time');\nconst board = document.querySelector('#board');\n\nlet time = 0;\n\nlet countClick = 0;\n\nstartButton.addEventListener('click', (event) => {\n    event.preventDefault();\n    screens[0].classList.add('up');\n});\n\ntimeList.addEventListener('click', (event) => {\n    const item = event.target;\n\n    if (item.classList.contains('time-btn')) {\n        time = +item.dataset.time;\n\n        startGame();\n    }\n\n});\n\nboard.addEventListener('click', (event) => {\n    const item = event.target;\n\n    if (item.classList.contains('circle')) {\n        countClick++;\n        item.remove();\n\n        getCircle();\n    }\n})\n\nfunction startGame() {\n    screens[1].classList.add('up');\n\n    setTime(time);\n    getCircle();\n    setInterval(decreaseTime, 1000);\n}\n\nfunction decreaseTime() {\n    if (time=== 0) {\n        finishGame();\n    } else {\n        let currentTime = --time;\n        if (currentTime < 10) {\n            currentTime = `0${time}`;\n        }\n\n        setTime(currentTime);\n    }\n    \n}\n\nfunction setTime(value) {\n    timeEl.innerHTML = `00:${value}`;\n\n}\n\nfunction finishGame() {\n    board.innerHTML = `<h1>Score: <span class=\"primary\">${countClick}</span></h1>`\n\n    const timetable = document.querySelector('#time-table');\n    timetable.style.opacity = 0;\n}\n\nfunction getCircle() {\n    const circle = document.createElement('div');\n    circle.classList.add('circle');\n\n    let size = randomCircleSize(10, 30);\n\n    const {width, height} = board.getBoundingClientRect();\n\n    circle.style.width = `${size}px`;\n    circle.style.height = `${size}px`;\n    circle.style.top = `${randomCircleSize(0, width - size)}px`;\n    circle.style.left = `${randomCircleSize(0, height - size)}px`;\n\n\n    board.append(circle);\n}\n\nfunction randomCircleSize(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\n\n"]}